///
/// Trade.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/// Represents an instance of `Trade`, backed by a C++ struct.
public typealias Trade = margelo.nitro.rncandle.Trade

extension Trade {
  private typealias bridge = margelo.nitro.rncandle.bridge.swift

  /**
   * Create a new instance of `Trade`.
   */
  public init(
    dateTime: String, state: TradeState, counterparty: Counterparty, lost: TradeAsset,
    gained: TradeAsset
  ) {
    self.init(std.string(dateTime), state, counterparty, lost, gained)
  }

  public var dateTime: String {
    @inline(__always)
    get {
      return String(self.__dateTime)
    }
    @inline(__always)
    set {
      self.__dateTime = std.string(newValue)
    }
  }

  public var state: TradeState {
    @inline(__always)
    get {
      return self.__state
    }
    @inline(__always)
    set {
      self.__state = newValue
    }
  }

  public var counterparty: Counterparty {
    @inline(__always)
    get {
      return self.__counterparty
    }
    @inline(__always)
    set {
      self.__counterparty = newValue
    }
  }

  public var lost: TradeAsset {
    @inline(__always)
    get {
      return self.__lost
    }
    @inline(__always)
    set {
      self.__lost = newValue
    }
  }

  public var gained: TradeAsset {
    @inline(__always)
    get {
      return self.__gained
    }
    @inline(__always)
    set {
      self.__gained = newValue
    }
  }
}
