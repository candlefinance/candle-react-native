///
/// TradeQuoteRequest.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/// Represents an instance of `TradeQuoteRequest`, backed by a C++ struct.
public typealias TradeQuoteRequest = margelo.nitro.rncandle.TradeQuoteRequest

extension TradeQuoteRequest {
  private typealias bridge = margelo.nitro.rncandle.bridge.swift

  /**
   * Create a new instance of `TradeQuoteRequest`.
   */
  public init(
    linkedAccountIDs: String?, gained: TradeAssetQuoteRequest, lost: TradeAssetQuoteRequest
  ) {
    self.init(
      { () -> bridge.std__optional_std__string_ in
        if let __unwrappedValue = linkedAccountIDs {
          return bridge.create_std__optional_std__string_(std.string(__unwrappedValue))
        } else {
          return .init()
        }
      }(), gained, lost)
  }

  public var linkedAccountIDs: String? {
    @inline(__always)
    get {
      return { () -> String? in
        if let __unwrapped = self.__linkedAccountIDs.value {
          return String(__unwrapped)
        } else {
          return nil
        }
      }()
    }
    @inline(__always)
    set {
      self.__linkedAccountIDs = { () -> bridge.std__optional_std__string_ in
        if let __unwrappedValue = newValue {
          return bridge.create_std__optional_std__string_(std.string(__unwrappedValue))
        } else {
          return .init()
        }
      }()
    }
  }

  public var gained: TradeAssetQuoteRequest {
    @inline(__always)
    get {
      return self.__gained
    }
    @inline(__always)
    set {
      self.__gained = newValue
    }
  }

  public var lost: TradeAssetQuoteRequest {
    @inline(__always)
    get {
      return self.__lost
    }
    @inline(__always)
    set {
      self.__lost = newValue
    }
  }
}
